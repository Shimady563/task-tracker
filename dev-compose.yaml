services:
  tracker:
    container_name: tracker
    build:
      context: ./tracker
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  notification:
    container_name: notification
    build:
      context: ./notification
      dockerfile: ./Dockerfile
    environment:
      - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
      - SPRING_MAIL_HOST=${MAIL_HOST}
      - SPRING_MAIL_PORT=${MAIL_PORT}
    depends_on:
      tracker:
        condition: service_started

  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    user: ${POSTGRES_USER}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    expose:
      - 22181
    environment:
      - ZOOKEEPER_CLIENT_PORT=22181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    expose:
      - 29093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:22181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:22181
    depends_on:
      - kafka
      - zookeeper

volumes:
  postgres-data:
